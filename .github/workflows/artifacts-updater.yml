# Copyright 2019-2022 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: updater test artifacts
on:
  push:
    branches:
      - dev
      - next
  pull_request:
    paths:
      - '.github/workflows/artifacts-updater.yml'
      - 'examples/updater/**'
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0 # This is set to 0 by the https://github.com/Swatinem/rust-cache
  CARGO_PROFILE_DEV_DEBUG: 0 # This would add unnecessary bloat to the target folder, decreasing cache efficiency.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-artifacts:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        if: matrix.platform == 'macos-latest' || matrix.platform == 'ubuntu-latest'

      - name: Get current date
        if: matrix.platform == 'windows-latest'
        run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Cache cargo state
        uses: actions/cache@v2
        env:
          cache-name: cargo_state
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-

      - name: Cache core cargo target
        uses: actions/cache@v2
        env:
          cache-name: cargo-core
        with:
          path: target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('core/**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('core/**/Cargo.toml') }}
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-

      - name: Cache CLI cargo target
        uses: actions/cache@v2
        env:
          cache-name: cargo_cli
        with:
          path: tooling/cli/target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('tooling/cli/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('tooling/cli/Cargo.lock') }}
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-

      - name: build and install cli.rs
        run: cargo install --path tooling/cli --force
      - name: Check whether code signing should be enabled
        id: enablecodesigning
        env:
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
        run: |
          echo "Enable code signing: ${{ env.ENABLE_CODE_SIGNING != '' }}"
          echo "::set-output name=enabled::${{ env.ENABLE_CODE_SIGNING != '' }}"
      # run only on tauri-apps/tauri repo (require secrets)
      - name: build sample artifacts + code signing (updater)
        if: steps.enablecodesigning.outputs.enabled == 'true'
        working-directory: ./examples/updater
        run: |
          yarn install
          cargo tauri build --verbose
        env:
          # Notarization (disabled)
          # FIXME: enable only on `dev` push maybe? as it take some times...
          #
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

          # Apple code signing testing
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          # Updater signature is exposed here to make sure it works in PR's
          TAURI_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5YTBGV3JiTy9lRDZVd3NkL0RoQ1htZmExNDd3RmJaNmRMT1ZGVjczWTBKZ0FBQkFBQUFBQUFBQUFBQUlBQUFBQWdMekUzVkE4K0tWQ1hjeGt1Vkx2QnRUR3pzQjVuV0ZpM2czWXNkRm9hVUxrVnB6TUN3K1NheHJMREhQbUVWVFZRK3NIL1VsMDBHNW5ET1EzQno0UStSb21nRW4vZlpTaXIwZFh5ZmRlL1lSN0dKcHdyOUVPclVvdzFhVkxDVnZrbHM2T1o4Tk1NWEU9Cg==
      # run on PRs and forks
      - name: build sample artifacts (updater)
        if: steps.enablecodesigning.outputs.enabled != 'true'
        working-directory: ./examples/updater
        run: |
          yarn install
          cargo tauri build --verbose
        env:
          TAURI_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5YTBGV3JiTy9lRDZVd3NkL0RoQ1htZmExNDd3RmJaNmRMT1ZGVjczWTBKZ0FBQkFBQUFBQUFBQUFBQUlBQUFBQWdMekUzVkE4K0tWQ1hjeGt1Vkx2QnRUR3pzQjVuV0ZpM2czWXNkRm9hVUxrVnB6TUN3K1NheHJMREhQbUVWVFZRK3NIL1VsMDBHNW5ET1EzQno0UStSb21nRW4vZlpTaXIwZFh5ZmRlL1lSN0dKcHdyOUVPclVvdzFhVkxDVnZrbHM2T1o4Tk1NWEU9Cg==
      # upload assets
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'ubuntu-latest'
        with:
          name: linux-updater-artifacts
          path: ./examples/updater/src-tauri/target/release/bundle/appimage/updater-example_*.AppImage.*
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'windows-latest'
        with:
          name: windows-updater-artifacts
          path: ./examples/updater/src-tauri/target/release/bundle/msi/*
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'macos-latest'
        with:
          name: macos-updater-artifacts
          path: ./examples/updater/src-tauri/target/release/bundle/macos/updater-example.app.tar.*
