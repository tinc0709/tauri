name: benches

on:
  push:
    branches:
      - dev
      - next
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0 # This is set to 0 by the https://github.com/Swatinem/rust-cache
  CARGO_PROFILE_DEV_DEBUG: 0 # This would add unnecessary bloat to the target folder, decreasing cache efficiency.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bench:
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly]
        platform:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2
      - name: install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rust-src
          target: ${{ matrix.platform.target }}

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: x64

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf xvfb
          wget https://github.com/sharkdp/hyperfine/releases/download/v1.11.0/hyperfine_1.11.0_amd64.deb
          sudo dpkg -i hyperfine_1.11.0_amd64.deb
          pip install memory_profiler

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Cache cargo state
        uses: actions/cache@v2
        env:
          cache-name: cargo_state
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-

      - name: Cache core cargo target
        uses: actions/cache@v2
        env:
          cache-name: cargo-core
        with:
          path: target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-${{ hashFiles('core/**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-${{ hashFiles('core/**/Cargo.toml') }}
            ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-
            ${{ matrix.platform }}-${{ matrix.rust }}-
            ${{ matrix.platform }}-

      - name: cache cargo `tooling/bench/tests` target
        uses: actions/cache@v2
        env:
          cache-name: cargo_benches
        with:
          path: tooling/bench/tests/target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-${{ hashFiles('tooling/bench/tests/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-${{ hashFiles('tooling/bench/tests/Cargo.lock') }}
            ${{ matrix.platform }}-${{ matrix.rust }}-${{ env.cache-name }}-
            ${{ matrix.platform }}-${{ matrix.rust }}-
            ${{ matrix.platform }}-

      - name: run benchmarks
        run: |
          cargo build --release -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target ${{ matrix.platform.target }} --manifest-path tooling/bench/tests/Cargo.toml
          xvfb-run --auto-servernum cargo run --manifest-path tooling/bench/Cargo.toml --bin run_benchmark

      - name: clone benchmarks_results
        if: github.repository == 'tauri-apps/tauri' && github.ref == 'refs/heads/dev'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BENCH_PAT }}
          path: gh-pages
          repository: tauri-apps/benchmark_results

      - name: push new benchmarks
        if: github.repository == 'tauri-apps/tauri' && github.ref == 'refs/heads/dev'
        run: |
          cargo run --manifest-path tooling/bench/Cargo.toml --bin build_benchmark_jsons
          cd gh-pages
          git pull
          git config user.name "tauri-bench"
          git config user.email "gh.tauribot@gmail.com"
          git add .
          git commit --message "Update Tauri benchmarks"
          git push origin gh-pages

      - name: Worker info
        run: |
          cat /proc/cpuinfo
          cat /proc/meminfo
